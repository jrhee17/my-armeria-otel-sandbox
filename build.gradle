buildscript {
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.9.3'
    }
}

plugins {
    id 'java'
}
apply plugin: 'com.google.protobuf'

group = 'com.github.jrhee17'
version = '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.linecorp.armeria:armeria:1.30.1'
    implementation 'com.linecorp.armeria:armeria-grpc:1.30.1'
    implementation 'com.linecorp.armeria:armeria-retrofit2:1.30.1'
    implementation 'com.linecorp.armeria:armeria-logback:1.30.1'
    implementation("javax.annotation:javax.annotation-api:1.3.2")

    runtimeOnly 'ch.qos.logback:logback-classic:1.4.14'

    testImplementation 'com.linecorp.armeria:armeria-junit5:1.30.1'

    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    implementation("io.opentelemetry:opentelemetry-api:1.44.1")

    implementation("com.squareup.retrofit2:converter-jackson:2.11.0")

}

test {
    useJUnitPlatform()
    jvmArgs "-javaagent:${project.rootDir}/opentelemetry-javaagent.jar"
    jvmArgs "-Dotel.javaagent.debug=true"
    jvmArgs "-Dotel.traces.exporter=logging"
    jvmArgs "-Dotel.metrics.exporter=none"
}


protobuf {
    // Configure the protoc executable.
    protoc {
        // Download from the repository.
        artifact = 'com.google.protobuf:protoc:3.25.1'
    }

    // Locate the codegen plugins.
    plugins {
        // Locate a plugin with name 'grpc'.
        grpc {
            // Download from the repository.
            artifact = 'io.grpc:protoc-gen-grpc-java:1.64.0'
        }
    }
    generateProtoTasks {
        ofSourceSet('main')*.plugins {
            grpc {}
        }
        ofSourceSet('test')*.plugins {
            grpc {}
        }
    }
}
